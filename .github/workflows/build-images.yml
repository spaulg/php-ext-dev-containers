name: 'Build containers'

on:
  workflow_call:
    inputs:
      matrix:
        type: string
        description: 'JSON encoded matrix for versions to build'
        required: true

      push:
        type: boolean
        description: 'Push the build to Docker Hub'
        required: false
        default: false

    secrets:
      DOCKERHUB_USERNAME: { required: true}
      DOCKERHUB_TOKEN: { required: true}

jobs:
  build_versions:
    name: PHP ${{ matrix.version }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    strategy:
      fail-fast: false
      matrix: ${{fromJSON(inputs.matrix)}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch php source
        run: |
          curl -sSfL "${{ matrix.asset_url }}" -o build/${{ matrix.asset_filename }}

      - name: Build amd64 packages
        run: |
          earthly +build --version=${{ matrix.full_version }} --suffix=${{ matrix.suffix }} --architecture=amd64 \
            --log_filename=build.amd64.log --status_filename=build.amd64.status

          [ "$(cat output/build.amd64.status)" -eq 0 ] || false

      - name: Build arm64 packages
        run: |
          earthly +build --version=${{ matrix.full_version }} --suffix=${{ matrix.suffix }} --architecture=arm64 \
            --log_filename=build.arm64.log --status_filename=build.arm64.status
          
          [ "$(cat output/build.arm64.status)" -eq 0 ] || false

      - name: Save deb files to build
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.version }}
          if-no-files-found: ignore
          path: |
            output/*.log
            output/*.status
            output/*.deb







#  buster:
#    name: PHP ${{ matrix.php_version }}
#    runs-on: ubuntu-20.04
#    timeout-minutes: 10
#
#    strategy:
#      fail-fast: false
#      matrix:
#        php_version:
#          - '8.1'
#          - '8.1-zts'
#          - '8.0'
#          - '8.0-zts'
#          - '7.4'
#          - '7.4-zts'
#          - '7.3'
#          - '7.3-zts'
#          - '7.2'
#          - '7.2-zts'
#          - '7.1'
#          - '7.1-zts'
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        if: ${{ inputs.push }}
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v3
#        with:
#          file: Dockerfile.buster
#          context: .
#          push: ${{ inputs.push }}
#          tags: |
#            spaulg/php-ext-dev-containers:${{ matrix.php_version }}
#          build-args: |
#            PHP_VERSION=${{ matrix.php_version }}
#            CMAKE_VERSION=3.22.5
#          platforms: |
#            linux/arm64
#            linux/amd64
#
#  jessie:
#    name: PHP ${{ matrix.php_version }}
#    runs-on: ubuntu-20.04
#    timeout-minutes: 10
#
#    strategy:
#      fail-fast: false
#      matrix:
#        php_version:
#          - '7.0'
#          - '7.0-zts'
#          - '5.6'
#          - '5.6-zts'
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        if: ${{ inputs.push }}
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v3
#        with:
#          file: Dockerfile.jessie
#          context: .
#          push: ${{ inputs.push }}
#          tags: |
#            spaulg/php-ext-dev-containers:${{ matrix.php_version }}
#          build-args: |
#            PHP_VERSION=${{ matrix.php_version }}
#            CMAKE_VERSION=3.22.5
#          platforms: |
#            linux/amd64
